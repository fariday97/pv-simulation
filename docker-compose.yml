services:
  rabbitmq:
    image: rabbitmq:4-management
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT}:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./logs:/var/log/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - RABBITMQ_LOGS=rabbit.log

  meter:
    build:
      context: .
      dockerfile: meter/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "sh", "-c", "python healthcheck.py ${METER_HEALTH_PORT} > /dev/null 2>&1"]
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - ./logs:/app/log
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE}
      - METER_INTERVAL=${METER_INTERVAL}
      - SIMULATION_DURATION=${SIMULATION_DURATION}
      - METER_HEALTH_PORT=${METER_HEALTH_PORT}

  pv_simulator:
    build:
      context: .
      dockerfile: pv_simulator/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "sh", "-c", "python healthcheck.py ${PV_SIM_HEALTH_PORT} > /dev/null 2>&1"]
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - ./results:/app/results
      - ./logs:/app/log
      - /etc/localtime:/etc/localtime:ro
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE}
      - PV_SIM_HEALTH_PORT=${PV_SIM_HEALTH_PORT}
      #- TZ=${TIMEZONE}

volumes:
  rabbitmq_data:
